buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'curseforge'

version = "0.17.8"
group = "com.tarion.jas"
archivesBaseName = "JustAnotherSpawner"
def rType = "release"
/*
curse {
    projectId = '228952'
    apiKey = project.curseForgeApiKey
	
	displayName = project.archivesBaseName + " v" + project.version
	releaseType = rType //i.e. 'release'
    additionalArtifact "$project.buildDir/libs/" + project.archivesBaseName + "-" + project.version + "-sources.jar"
    relatedProject 'jas-compatability-addon': 'optionalLibrary'
}
*/
repositories {
	//mavenCentral()
	//maven {
	//	name = 'jeval'
	//	url = "https://oss.sonatype.org/content/repositories/central-sync"
	//}
	
	//maven {
	//	name = 'Codehaus Maven Repository'
	//	url = "https://dav.codehaus.org/repository/mvel/"
	//}
}

dependencies {
	//compile 'net.sourceforge.jeval:jeval:0.9.4'
	//compile 'org.mvel:mvel2:2.2.0.Final'
	// compile 'com.beust:jcommander:1.30' //JCommander command line arguments
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"

	//version = "1.7.10-10.13.2.1291" //"1.7.10-10.13.0.1180"
    //runDir = "eclipse" //assetDir = "eclipse/assets" //Needs to be changed to runDir, eventually
	
	// replacing version information
    replace "@MC_VERSION@", project.minecraft.version
    replace "@VERSION@", project.version
    replaceIn "DefaultProps.java"
}

processResources {
	// this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
	
	
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task generateChangelog(type : Exec) {
    commandLine "sh", "GEN-CHANGELOG.sh"
}

task addInfoToJar(dependsOn: generateChangelog, type: Copy) {
	from 'CHANGELOG.md', 'README.md'
    into 'build/resources/main'
}
jar.dependsOn addInfoToJar

task sourceJar(type: Jar, dependsOn:["sourceMainJava", "generateChangelog"]) {
    from "build/sources/java", "CHANGELOG.md", "README.md" 
    classifier = 'sources'
}
/*
task configureChangelog(dependsOn: generateChangelog) {
	def CHARS = file('CHANGELOG_MOST_RECENT.md').text
	def MAX_CHAR = 40000
	def maxLength = (CHARS.length() < MAX_CHAR)?CHARS.length():MAX_CHAR
    CHARS = CHARS.substring(0, maxLength)
	curse.changelog = CHARS
}
*/
//curse.dependsOn configureChangelog